{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/yuvraj/Downloads/NETSEC_PROJECT-main%202/pages/api/auth/%5B...nextauth%5D.ts"],"sourcesContent":["import NextAuth from 'next-auth'\nimport CredentialsProvider from 'next-auth/providers/credentials'\nimport bcrypt from 'bcryptjs'\n\nlet users: any[] = []  // temporary in-memory user store\n\nconst authOptions = {\n  providers: [\n    CredentialsProvider({\n      name: 'Credentials',\n      credentials: {\n        email: { label: 'Email', type: 'text' },\n        password: { label: 'Password', type: 'password' }\n      },\n      async authorize(credentials) {\n        const user = users.find(u => u.email === credentials?.email)\n        if (user && await bcrypt.compare(credentials!.password, user.password)) {\n          return { id: '1', name: user.email, email: user.email }\n        }\n        return null\n      }\n    })\n  ],\n  pages: {\n    signIn: '/login'\n  },\n  session: {\n    strategy: 'jwt'\n  }\n}\n\nexport default NextAuth(authOptions)  // âœ… this fixes your error\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,IAAI,QAAe,EAAE,CAAE,iCAAiC;;AAExD,MAAM,cAAc;IAClB,WAAW;QACT,CAAA,GAAA,wJAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAO;gBACtC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,KAAK,KAAK,aAAa;gBACtD,IAAI,QAAQ,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,YAAa,QAAQ,EAAE,KAAK,QAAQ,GAAG;oBACtE,OAAO;wBAAE,IAAI;wBAAK,MAAM,KAAK,KAAK;wBAAE,OAAO,KAAK,KAAK;oBAAC;gBACxD;gBACA,OAAO;YACT;QACF;KACD;IACD,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;IACZ;AACF;uCAEe,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE,aAAc,0BAA0B","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/yuvraj/Downloads/NETSEC_PROJECT-main%202/app/dashboard/page.tsx"],"sourcesContent":["\nimport { getServerSession } from 'next-auth'\nimport { authOptions } from '../../pages/api/auth/[...nextauth]'\nimport { redirect } from 'next/navigation'\n\nexport default async function Dashboard() {\n  const session = await getServerSession(authOptions)\n  if (!session) redirect('/login')\n\n  return (\n    <div className=\"p-10\">\n      <h1 className=\"text-2xl\">Welcome, {session.user?.email}</h1>\n      <p>You are logged in.</p>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,0IAAA,CAAA,cAAW;IAClD,IAAI,CAAC,SAAS,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAEvB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;;oBAAW;oBAAU,QAAQ,IAAI,EAAE;;;;;;;0BACjD,8OAAC;0BAAE;;;;;;;;;;;;AAGT","debugId":null}}]
}